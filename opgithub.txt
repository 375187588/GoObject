
Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot
$ git remote add origin https://github.com/375187588/GoObject.git
fatal: Not a git repository (or any of the parent directories): .git

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot
$ git init
Initialized empty Git repository in E:/GoWork/GoObject/src/gorobot/.git/

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git add README.md
fatal: pathspec 'README.md' did not match any files

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git commit -m "study go"
On branch master

Initial commit

Untracked files:
        engine/
        fetcher/
        main.go
        module/
        persist/
        readme.txt
        redis/
        rpc/
        scheduler/
        util/
        zhenai/

nothing added to commit but untracked files present

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git add -A

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git commit -m "go并发版爬虫项目"
[master (root-commit) d0753a0] go并发版爬虫项目
 24 files changed, 2909 insertions(+)
 create mode 100644 engine/concurrent.go
 create mode 100644 engine/simple.go
 create mode 100644 engine/types.go
 create mode 100644 engine/worker.go
 create mode 100644 fetcher/fetcher.go
 create mode 100644 main.go
 create mode 100644 module/profile.go
 create mode 100644 persist/ItemServer.go
 create mode 100644 readme.txt
 create mode 100644 redis/redis.go
 create mode 100644 redis/redis/goredis.go
 create mode 100644 rpc/client/client.go
 create mode 100644 rpc/rpc.go
 create mode 100644 rpc/server/server.go
 create mode 100644 scheduler/queued.go
 create mode 100644 scheduler/simple.go
 create mode 100644 util/tools.go
 create mode 100644 zhenai/parser/city.go
 create mode 100644 zhenai/parser/citylist.go
 create mode 100644 zhenai/parser/citylist_data.html
 create mode 100644 zhenai/parser/citylist_test.go
 create mode 100644 zhenai/parser/profile.go
 create mode 100644 zhenai/parser/profile_test.go
 create mode 100644 zhenai/parser/profile_test_data.html

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git clone ssh://375187588@https://github.com/375187588/GoObject.git
Cloning into 'GoObject'...
ssh: Could not resolve hostname https: Name or service not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git clone https://github.com/375187588/GoObject.git
Cloning into 'GoObject'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git clone git@github.com:375187588/GoObject.git
fatal: destination path 'GoObject' already exists and is not an empty directory.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git clone SSH://git@github.com:375187588/GoObject.git
fatal: destination path 'GoObject' already exists and is not an empty directory.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git clone https://github.com/375187588/GoObject.git
fatal: destination path 'GoObject' already exists and is not an empty directory.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git config --global
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-regex]
    --get-all             get all values: key [value-regex]
    --get-regexp          get values for regexp: name-regex [value-regex]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value_regex]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-regex]
    --unset-all           remove all matches: name [value-regex]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --path                value is a path (file or directory name)

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)


Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git status
On branch master
nothing to commit, working directory clean

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git remote add origin https://github.com/375187588/GoObject.git

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git push -u origin master
Counting objects: 39, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (31/31), done.
Writing objects: 100% (39/39), 69.99 KiB | 0 bytes/s, done.
Total 39 (delta 0), reused 0 (delta 0)
To https://github.com/375187588/GoObject.git
 * [new branch]      master -> master
Branch master set up to track remote branch master from origin.

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git tag -a v0.0.0.1 -m 'v0.0.0.1'

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$ git push --tag
Counting objects: 1, done.
Writing objects: 100% (1/1), 153 bytes | 0 bytes/s, done.
Total 1 (delta 0), reused 0 (delta 0)
To https://github.com/375187588/GoObject.git
 * [new tag]         v0.0.0.1 -> v0.0.0.1

Administrator@BVDYD1U6OVRBO3I MINGW64 /e/GoWork/GoObject/src/gorobot (master)
$
